# Copyright 2015 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Django secure for web project.

Generated by 'django-admin startproject' using Django 1.8.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/secure/

For the full list of secure and their values, see
https://docs.djangoproject.com/en/1.8/ref/secure/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import string

#from djangoappengine.settings_base import *

try:
    from dev_appserver_version import DEV_APPSERVER_VERSION
except ImportError:
    DEV_APPSERVER_VERSION = 2

# Initialize App Engine SDK if necessary.
# try:
#     from google.appengine.api import apiproxy_stub_map
# except ImportError:
#     from djangoappengine.boot import setup_env
#     setup_env(DEV_APPSERVER_VERSION)

# from djangoappengine.utils import on_production_server

DEBUG = False
TEMPLATE_DEBUG = DEBUG

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development secure - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY  = '??????????????????????????????????????????????????'

# SECURITY WARNING: don't run with debug turned on in production!

ALLOWED_HOSTS = [
    'yourgaehost.appspot.com',
    'your short url domain that CNAMES to yourgaehost.appspot.com, if you use one',
]

# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'snakr',
    #'djangotoolbox',
    #'autoload',
    #'dbindexer',
    ## djangoappengine should come last, so it can override a few manage.py commands
    #'djangoappengine',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
#    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
#    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'web.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.core.context_processors.request',
            ],
        },
    },
]

import os.path
temp_path = os.path.realpath('.')
TEMPLATE_DIRS = (
    temp_path +"/templates",
)

WSGI_APPLICATION = 'web.wsgi.application'

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_ROOT='static'
STATIC_URL = '/static/'

# PREPARE_UPLOAD_BACKEND = 'djangoappengine.storage.prepare_upload'
# SERVE_FILE_BACKEND = 'djangoappengine.storage.serve_file'
# DEFAULT_FILE_STORAGE = 'djangoappengine.storage.BlobstoreStorage'
# FILE_UPLOAD_MAX_MEMORY_SIZE = 1024 * 1024
# FILE_UPLOAD_HANDLERS = (
#     'djangoappengine.storage.BlobstoreFileUploadHandler',
#     'django.core.files.uploadhandler.MemoryFileUploadHandler',
# )
#
# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
#         'TIMEOUT': 0,
#     }
# }
#
# SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'

ADMINS = ()
MANAGERS = ADMINS

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

# [START db_setup]
import os
SNAKRDB_MODE = "REMOTE"
if os.getenv('SERVER_SOFTWARE', '').startswith('Google App Engine'):
    # Running on production App Engine, so use a Google Cloud SQL database.
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': '/cloudsql/your_gae_appid:your_gcs_instancename',
            'NAME': 'your_gcs_schemaname',
            'USER': 'root',    # sounds crazy, but "root" is required by GAE (hmmmmmmmmmm)
        }
        # 'default': {
        #     'ENGINE': 'djangoappengine.db',
        # }
    }
elif SNAKRDB_MODE == "REMOTE":
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': 'your_gcs_ipv4_or_ipv6_address',
            'NAME': 'your_gcs_schemaname',
            'USER': 'your_mysqlworkbench_username_NOT_ROOT',
            'PASSWORD': 'your_mysqlworkbench_password'
        }
        # 'default': {
        #     'ENGINE': 'djangoappengine.db',
        # }
    }
elif SNAKRDB_MODE == "LOCAL":
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'your_local_mysql_schema',
            'USER': 'your_local_mysql_username',
            'PASSWORD': 'your_local_mysql_password',
            'HOST': '127.0.0.1_or_localhost',
            'PORT': '3306_or_your_custom_mysql_port',
        }
    }
# [END db_setup]

# Max retries on hash collision detection. You shouldn't need to change this.
MAX_RETRIES = 3

# host (netloc) of the short URL to use.
# Replace with a short domain name that CNAMES to your_gae_appid.appspot.com if desired.
SHORTURL_HOST        = "your_gae_appid.appspot.com" # or your short domain name that CNAMEs to your_gae_appid.appspot.com
SECURE_SHORTURL_HOST = "your_gae_appid.appspot.com" # or your short domain name that CNAMEs to your_gae_appid.appspot.com

# Number of alphabetic characters in the short URL path (min 6, max 12)
SHORTURL_PATH_SIZE = 6

# Character set to use for the short URL path. Remove easily-confused characters "0", "O", "o", "1", and "l". Keep "L".
SHORTURL_PATH_ALPHABET = string.digits + string.letters
SHORTURL_PATH_ALPHABET = SHORTURL_PATH_ALPHABET.replace("0","").replace("O","").replace("o","").replace("1","").replace("l","")

# DON'T change this
APPEND_SLASH=False

# Set to True to persist 400 (SuspiciousOperation) errors to snakr_log
SNAKR_LOG_400_ERRORS = True